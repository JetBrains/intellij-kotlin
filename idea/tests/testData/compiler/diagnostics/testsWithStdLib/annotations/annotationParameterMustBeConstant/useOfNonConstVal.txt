package

public const val constConst: kotlin.Int = 3
public val nonConst: kotlin.Int = 1
@Ann(x = 1, y = "1") public fun foo1(): kotlin.Unit
@Ann(x = 4, y = "3") public fun foo2(): kotlin.Unit
@ArrayAnn(x = {1, 3, 1}) public fun foo3(): kotlin.Unit

public final annotation class Ann : kotlin.Annotation {
    public constructor Ann(/*0*/ x: kotlin.Int, /*1*/ y: kotlin.String)
    public final val x: kotlin.Int
    public final val y: kotlin.String
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final annotation class ArrayAnn : kotlin.Annotation {
    public constructor ArrayAnn(/*0*/ x: kotlin.IntArray)
    public final val x: kotlin.IntArray
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
