package

public fun declarations(/*0*/ a: kotlin.Any?): kotlin.Unit
public fun f(): kotlin.String
public fun f10(/*0*/ init: A?): kotlin.Unit
public fun f101(/*0*/ a: A?): kotlin.Unit
public fun f11(/*0*/ a: A?): kotlin.Unit
public fun f12(/*0*/ a: A?): kotlin.Unit
public fun f13(/*0*/ a: A?): kotlin.Unit
public fun f14(/*0*/ a: A?): kotlin.Unit
public fun f15(/*0*/ a: A?): kotlin.Unit
public fun f9(/*0*/ init: A?): kotlin.Unit
public fun foo(/*0*/ aa: kotlin.Any?): kotlin.Int
public fun getStringLength(/*0*/ obj: kotlin.Any): kotlin.Char?
public fun illegalWhenBlock(/*0*/ a: kotlin.Any): kotlin.Int
public fun illegalWhenBody(/*0*/ a: kotlin.Any): kotlin.Int
public fun mergeSmartCasts(/*0*/ a: kotlin.Any?): kotlin.Unit
public fun returnFunctionLiteral(/*0*/ a: kotlin.Any?): () -> kotlin.Int
public fun returnFunctionLiteralBlock(/*0*/ a: kotlin.Any?): () -> kotlin.Int
public fun returnFunctionLiteralExpressionBody(/*0*/ a: kotlin.Any?): () -> kotlin.Int
public fun toInt(/*0*/ i: kotlin.Int?): kotlin.Int
public fun vars(/*0*/ a: kotlin.Any?): kotlin.Unit

public open class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class B : A {
    public constructor B()
    public final fun bar(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class C : A {
    public constructor C()
    public final fun bar(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
