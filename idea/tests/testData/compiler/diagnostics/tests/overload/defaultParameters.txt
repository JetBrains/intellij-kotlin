package

public fun </*0*/ T> discriminateGeneric(/*0*/ a: T): kotlin.Int
public fun discriminateGeneric(/*0*/ a: kotlin.Int, /*1*/ b: kotlin.String = ...): kotlin.String
public fun simple(): kotlin.Int
public fun simple(/*0*/ a: kotlin.Int = ...): kotlin.String
public fun test(): kotlin.Unit
public fun twoDefault(/*0*/ a: kotlin.Any = ..., /*1*/ b: kotlin.String = ...): kotlin.String
public fun twoDefault(/*0*/ a: kotlin.Int = ...): kotlin.Int
public fun </*0*/ T : kotlin.CharSequence> withDefaultGeneric(/*0*/ t: T, /*1*/ d: T? = ...): kotlin.Int
public fun </*0*/ T : kotlin.Any> withDefaultGeneric(/*0*/ t: T, /*1*/ d: T? = ..., /*2*/ a: kotlin.Int = ...): kotlin.String
public fun withDefaults(/*0*/ a: kotlin.Any = ...): kotlin.Int
public fun withDefaults(/*0*/ a: kotlin.Int = ..., /*1*/ b: kotlin.String = ...): kotlin.String
public fun </*0*/ T> withGeneric(/*0*/ a: T): kotlin.Int
public fun </*0*/ T> withGeneric(/*0*/ a: T, /*1*/ b: kotlin.Int = ...): kotlin.String
public fun </*0*/ T : kotlin.Any> withGenericDefaults(/*0*/ t: T, /*1*/ d: T? = ...): kotlin.Int
public fun </*0*/ T : kotlin.CharSequence> withGenericDefaults(/*0*/ t: T, /*1*/ d: T? = ..., /*2*/ a: kotlin.Int = ...): kotlin.String
public fun wrong(/*0*/ a: kotlin.Int = ...): kotlin.Unit
public fun wrong(/*0*/ a: kotlin.String = ..., /*1*/ b: kotlin.Int = ...): kotlin.Unit
