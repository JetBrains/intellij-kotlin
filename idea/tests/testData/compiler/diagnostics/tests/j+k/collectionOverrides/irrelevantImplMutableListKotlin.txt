package

public fun main(): kotlin.Unit

public open class A : AImpl, kotlin.collections.MutableList<kotlin.String!> {
    public constructor A()
    public final override /*2*/ /*fake_override*/ val size: kotlin.Int
    public final override /*2*/ /*fake_override*/ fun add(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String): kotlin.Unit
    public final override /*2*/ /*fake_override*/ fun add(/*0*/ element: kotlin.String): kotlin.Boolean
    public final override /*2*/ /*fake_override*/ fun addAll(/*0*/ index: kotlin.Int, /*1*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final override /*2*/ /*fake_override*/ fun addAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final override /*2*/ /*fake_override*/ fun clear(): kotlin.Unit
    public final override /*2*/ /*fake_override*/ fun contains(/*0*/ element: kotlin.String!): kotlin.Boolean
    public final override /*2*/ /*fake_override*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    public open override /*2*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final override /*2*/ /*fake_override*/ fun get(/*0*/ index: kotlin.Int): kotlin.String
    public open override /*2*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final override /*2*/ /*fake_override*/ fun indexOf(/*0*/ element: kotlin.String): kotlin.Int
    public final override /*2*/ /*fake_override*/ fun isEmpty(): kotlin.Boolean
    public final override /*2*/ /*fake_override*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String>
    public final override /*2*/ /*fake_override*/ fun lastIndexOf(/*0*/ element: kotlin.String): kotlin.Int
    public final override /*2*/ /*fake_override*/ fun listIterator(): kotlin.collections.MutableListIterator<kotlin.String>
    public final override /*2*/ /*fake_override*/ fun listIterator(/*0*/ index: kotlin.Int): kotlin.collections.MutableListIterator<kotlin.String>
    public final override /*2*/ /*fake_override*/ fun remove(/*0*/ element: kotlin.String): kotlin.Boolean
    public final override /*2*/ /*fake_override*/ fun removeAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final override /*2*/ /*fake_override*/ fun removeAt(/*0*/ index: kotlin.Int): kotlin.String
    public final override /*2*/ /*fake_override*/ fun retainAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final override /*2*/ /*fake_override*/ fun set(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String): kotlin.String
    public final override /*2*/ /*fake_override*/ fun subList(/*0*/ fromIndex: kotlin.Int, /*1*/ toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.String>
    public open override /*2*/ /*fake_override*/ fun toString(): kotlin.String
}

public abstract class AImpl {
    public constructor AImpl()
    public final val size: kotlin.Int
    public final fun add(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String): kotlin.Unit
    public final fun add(/*0*/ element: kotlin.String): kotlin.Boolean
    public final fun addAll(/*0*/ index: kotlin.Int, /*1*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final fun addAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final fun clear(): kotlin.Unit
    public final fun contains(/*0*/ element: kotlin.Any?): kotlin.Boolean
    public final fun containsAll(/*0*/ elements: kotlin.collections.Collection<*>): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun get(/*0*/ index: kotlin.Int): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final fun indexOf(/*0*/ element: kotlin.String): kotlin.Int
    public final fun isEmpty(): kotlin.Boolean
    public final fun iterator(): kotlin.collections.MutableIterator<kotlin.String>
    public final fun lastIndexOf(/*0*/ element: kotlin.String): kotlin.Int
    public final fun listIterator(): kotlin.collections.MutableListIterator<kotlin.String>
    public final fun listIterator(/*0*/ index: kotlin.Int): kotlin.collections.MutableListIterator<kotlin.String>
    public final fun remove(/*0*/ index: kotlin.Int): kotlin.String
    public final fun remove(/*0*/ element: kotlin.String): kotlin.Boolean
    public final fun removeAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final fun retainAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final fun set(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String): kotlin.String
    public final fun subList(/*0*/ fromIndex: kotlin.Int, /*1*/ toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class X : A {
    public constructor X()
    public final override /*1*/ /*fake_override*/ val size: kotlin.Int
    public final override /*1*/ /*fake_override*/ fun add(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String): kotlin.Unit
    public final override /*1*/ /*fake_override*/ fun add(/*0*/ element: kotlin.String): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun addAll(/*0*/ index: kotlin.Int, /*1*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun addAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun clear(): kotlin.Unit
    public final override /*1*/ /*fake_override*/ fun contains(/*0*/ element: kotlin.String!): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun get(/*0*/ index: kotlin.Int): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun indexOf(/*0*/ element: kotlin.String): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun isEmpty(): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String>
    public final override /*1*/ /*fake_override*/ fun lastIndexOf(/*0*/ element: kotlin.String): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun listIterator(): kotlin.collections.MutableListIterator<kotlin.String>
    public final override /*1*/ /*fake_override*/ fun listIterator(/*0*/ index: kotlin.Int): kotlin.collections.MutableListIterator<kotlin.String>
    public final override /*1*/ /*fake_override*/ fun remove(/*0*/ element: kotlin.String): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun removeAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun removeAt(/*0*/ index: kotlin.Int): kotlin.String
    public final override /*1*/ /*fake_override*/ fun retainAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun set(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String): kotlin.String
    public final override /*1*/ /*fake_override*/ fun subList(/*0*/ fromIndex: kotlin.Int, /*1*/ toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
