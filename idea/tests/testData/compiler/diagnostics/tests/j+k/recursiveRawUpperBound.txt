package

public fun foo(/*0*/ p: X): Bad<(raw) Bad<*>!>!

public open class Bad</*0*/ T : Bad<(raw) Bad<*>>!> {
    public constructor Bad</*0*/ T : Bad<(raw) Bad<*>>!>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class X {
    public constructor X()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public/*package*/ open fun foo(): Bad<(raw) Bad<*>!>!
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
