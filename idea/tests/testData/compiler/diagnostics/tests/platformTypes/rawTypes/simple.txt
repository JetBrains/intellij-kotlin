package

public val strList: kotlin.collections.List<kotlin.String>
public val strMap: kotlin.collections.Map<kotlin.String, kotlin.String>
public fun main(): kotlin.Unit

public/*package*/ open class A</*0*/ T : kotlin.Any!> {
    public/*package*/ constructor A</*0*/ T : kotlin.Any!>()
    public/*package*/ final var x: kotlin.collections.(Mutable)List<T!>!
    public/*package*/ final var y: kotlin.collections.(Mutable)Map<T!, T!>!
    public/*package*/ final var z: A<kotlin.collections.(Mutable)Map<kotlin.String!, T!>!>!
    public/*package*/ open fun bar(): A<kotlin.collections.(Mutable)List<T!>!>!
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public/*package*/ open fun foo(/*0*/ x: T!, /*1*/ y: kotlin.collections.(Mutable)List<T!>!, /*2*/ z: kotlin.collections.(Mutable)List<kotlin.collections.(Mutable)Map<kotlin.Int!, T!>!>!): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public/*package*/ open class Test {
    public/*package*/ constructor Test()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public/*package*/ final var rawAField: A<(raw) kotlin.Any!>!
}
