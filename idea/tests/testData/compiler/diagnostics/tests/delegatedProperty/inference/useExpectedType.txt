package

package foo {
    public var c1: kotlin.String
    public var c2: kotlin.String
    public var c3: kotlin.String
    public var d1: kotlin.String
    public var d2: kotlin.String
    public var d3: kotlin.String
    public fun </*0*/ A, /*1*/ B> getMyProperty1(): foo.MyProperty1<A, B>
    public fun </*0*/ A> getMyProperty2(): foo.MyProperty2<A>
    public fun </*0*/ A> getMyProperty3(): foo.MyProperty3<A>
    public fun println(/*0*/ a: kotlin.Any?): kotlin.Any?

    public final class A1 {
        public constructor A1()
        public final var a1: kotlin.String
        public final var b1: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class A2 {
        public constructor A2()
        public final var a2: kotlin.String
        public final var b2: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class A3 {
        public constructor A3()
        public final var a3: kotlin.String
        public final var b3: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class MyProperty1</*0*/ R, /*1*/ T> {
        public constructor MyProperty1</*0*/ R, /*1*/ T>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final operator fun getValue(/*0*/ thisRef: R, /*1*/ desc: kotlin.reflect.KProperty<*>): T
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final operator fun setValue(/*0*/ thisRef: R, /*1*/ desc: kotlin.reflect.KProperty<*>, /*2*/ value: T): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class MyProperty2</*0*/ T> {
        public constructor MyProperty2</*0*/ T>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final operator fun getValue(/*0*/ thisRef: kotlin.Any?, /*1*/ desc: kotlin.reflect.KProperty<*>): T
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final operator fun setValue(/*0*/ thisRef: kotlin.Any?, /*1*/ desc: kotlin.reflect.KProperty<*>, /*2*/ value: T): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class MyProperty3</*0*/ T> {
        public constructor MyProperty3</*0*/ T>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final operator fun getValue(/*0*/ thisRef: T, /*1*/ desc: kotlin.reflect.KProperty<*>): kotlin.String
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final operator fun setValue(/*0*/ thisRef: kotlin.Any?, /*1*/ desc: kotlin.reflect.KProperty<*>, /*2*/ value: T): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
