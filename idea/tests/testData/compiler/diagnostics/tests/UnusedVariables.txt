package

package unused_variables {
    public fun doSmth(/*0*/ i: kotlin.Int): kotlin.Unit
    public fun testFunctionLiterals(): kotlin.Unit
    public fun testInnerFunctions(): kotlin.Unit
    public fun testObject(): unused_variables.Trait
    public fun testSimpleCases(): kotlin.Unit

    public final class IncDec {
        public constructor IncDec()
        public final operator fun dec(): unused_variables.IncDec
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final operator fun inc(): unused_variables.IncDec
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class MyTest {
        public constructor MyTest()
        public final var a: kotlin.String
        public final fun doSmth(/*0*/ a: kotlin.Any): kotlin.Unit
        public final fun doSmth(/*0*/ s: kotlin.String): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final fun testFor(): kotlin.Unit
        public final fun testIf(): kotlin.Unit
        public final fun testIncDec(): kotlin.Unit
        public final fun testSimple(): kotlin.Unit
        public final fun testWhile(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public interface Trait {
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public abstract fun foo(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
