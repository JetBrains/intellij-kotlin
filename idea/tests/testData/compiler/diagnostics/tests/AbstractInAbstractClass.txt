package

package abstract {

    public abstract class MyAbstractClass {
        public constructor MyAbstractClass()
        public final val a: kotlin.Int
        public final val a1: kotlin.Int = 1
        public abstract val a2: kotlin.Int
        public abstract val a3: kotlin.Int = 1
        public final var b: kotlin.Int
        public final var b1: kotlin.Int
        public abstract var b2: kotlin.Int
        public abstract var b3: kotlin.Int
        public final var c: kotlin.Int
        public final var c1: kotlin.Int
        public abstract var c2: kotlin.Int
        public abstract var c3: kotlin.Int
        public final val e: kotlin.Int
        public final val e1: kotlin.Int = 0
        public abstract val e2: kotlin.Int
        public abstract val e3: kotlin.Int = 0
        public final var i: kotlin.Int
        public final var i1: kotlin.Int
        public final var j: kotlin.Int
        public final var j1: kotlin.Int
        public final var k: kotlin.Int
        public final var k1: kotlin.Int
        public final var l: kotlin.Int
        public final var l1: kotlin.Int
        public final var n: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun f(): kotlin.Unit
        public final fun g(): kotlin.Unit
        public abstract fun h(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public abstract fun j(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
