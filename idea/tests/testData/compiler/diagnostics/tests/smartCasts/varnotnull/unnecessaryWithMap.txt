package

public fun create(): kotlin.collections.Map<kotlin.String, kotlin.String>
public operator fun </*0*/ K, /*1*/ V> kotlin.collections.Map.Entry<K, V>.component1(): K
public operator fun </*0*/ K, /*1*/ V> kotlin.collections.Map.Entry<K, V>.component2(): V
public operator fun </*0*/ K, /*1*/ V> kotlin.collections.Map<K, V>.iterator(): kotlin.collections.Iterator<kotlin.collections.Map.Entry<K, V>>

public final class MyClass {
    public constructor MyClass()
    private final var m: kotlin.collections.Map<kotlin.String, kotlin.String>?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun foo(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
