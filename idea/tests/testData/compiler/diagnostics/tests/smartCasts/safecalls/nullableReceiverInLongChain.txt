package

public fun test(/*0*/ foo: Foo?): kotlin.Unit
public fun testNotNull(/*0*/ foo: Foo): kotlin.Unit
public fun testNullable(/*0*/ foo: Foo?): kotlin.Unit
public fun kotlin.String?.call(/*0*/ f: (kotlin.String?) -> kotlin.String?): kotlin.String?
public fun kotlin.String.notNullLet(/*0*/ f: (kotlin.String) -> kotlin.Unit): kotlin.Unit

public final class Bar {
    public constructor Bar(/*0*/ gav: kotlin.String)
    public final val gav: kotlin.String
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Foo {
    public constructor Foo(/*0*/ bar: Bar, /*1*/ nbar: Bar?)
    public final val bar: Bar
    public final val nbar: Bar?
    public final fun baz(/*0*/ s: kotlin.String): Bar?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
