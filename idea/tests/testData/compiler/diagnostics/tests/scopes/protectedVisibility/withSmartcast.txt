package

public open class Base {
    public constructor Base()
    protected open var x: kotlin.Int
    public open var y: kotlin.Int
    protected open fun bar(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    protected open fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Derived : Base {
    public constructor Derived()
    protected open override /*1*/ /*fake_override*/ var x: kotlin.Int
    public open override /*1*/ /*fake_override*/ var y: kotlin.Int
    protected open override /*1*/ fun bar(): kotlin.Unit
    protected final fun baz(/*0*/ x: Base): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    protected open override /*1*/ /*fake_override*/ fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
