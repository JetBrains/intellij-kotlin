package

public fun test(/*0*/ clazz: Clazz<out kotlin.Any>): kotlin.Unit
public fun </*0*/ T, /*1*/ C : kotlin.collections.MutableCollection<in T>> kotlin.collections.Iterable<T>.filterTo(/*0*/ destination: C, /*1*/ predicate: (T) -> kotlin.Boolean): kotlin.Unit

public open class Clazz</*0*/ Psi : kotlin.Any!> {
    public constructor Clazz</*0*/ Psi : kotlin.Any!>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open fun foo(): kotlin.collections.(Mutable)Collection<Psi!>!
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
