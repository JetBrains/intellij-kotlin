package

public fun test0(): kotlin.Unit
public fun test1(): kotlin.Unit

public final class Outer</*0*/ T> {
    public constructor Outer</*0*/ T>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public final inner class Inner</*0*/ R> /*captured type parameters: /*1*/ T*/ {
        public constructor Inner</*0*/ R>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun foo(/*0*/ t: T, /*1*/ r: R): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final fun </*0*/ S> newInner(): Outer<T>.Inner<S>
        public final fun </*0*/ U, /*1*/ S> newOuterInner(): Outer<U>.Inner<S>
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
