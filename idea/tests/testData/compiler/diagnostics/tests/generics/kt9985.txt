package

public fun bar(): kotlin.Unit
public fun foo(/*0*/ l: A<kotlin.String>?): kotlin.Unit
public fun </*0*/ R> foo(/*0*/ x: R): R
public fun fooNotNull(/*0*/ l: A<kotlin.String>): kotlin.Unit
public fun </*0*/ T> A<T>.bar(): kotlin.String
public fun </*0*/ T> B<T>.bar(): kotlin.String

public final class A</*0*/ T> {
    public constructor A</*0*/ T>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun gav(): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class B</*0*/ T : kotlin.Any!> {
    public constructor B</*0*/ T : kotlin.Any!>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open fun gav(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public open fun </*0*/ T : kotlin.Any!> create(): B<T!>!
}
