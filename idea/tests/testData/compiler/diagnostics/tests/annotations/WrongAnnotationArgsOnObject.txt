package

package test {
    public val some: test.SomeObject

    public final annotation class BadAnnotation : kotlin.Annotation {
        public constructor BadAnnotation(/*0*/ s: kotlin.String)
        public final val s: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    @test.BadAnnotation(s = 1) public object SomeObject {
        private constructor SomeObject()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
