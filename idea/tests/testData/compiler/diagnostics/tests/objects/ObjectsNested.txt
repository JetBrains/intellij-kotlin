package

package nestedObejcts {
    public val a: nestedObejcts.A
    public val b: nestedObejcts.B
    public val c: nestedObejcts.A.B
    public val d: nestedObejcts.A.B.A
    public val e: [ERROR : <ERROR PROPERTY TYPE>]

    public object A {
        private constructor A()
        public final val b: nestedObejcts.A.B
        public final val d: nestedObejcts.A.B.A
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        public object B {
            private constructor B()
            public final val a: nestedObejcts.A.B.A
            public final val e: nestedObejcts.A.B.A
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

            public object A {
                private constructor A()
                public final val a: nestedObejcts.A.B.A
                public final val b: nestedObejcts.A.B
                public final val x: nestedObejcts.A.B.A
                public final val y: [ERROR : Type for this@A]
                public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
                public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
                public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
            }
        }
    }

    public object B {
        private constructor B()
        public final val b: nestedObejcts.B
        public final val c: nestedObejcts.A.B
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
