package

package override {

    package override.generics {

        public abstract class MyAbstractClass</*0*/ T> {
            public constructor MyAbstractClass</*0*/ T>()
            public abstract val pr: T
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }

        public abstract class MyLegalAbstractClass2</*0*/ T> : override.generics.MyAbstractClass<kotlin.Int> {
            public constructor MyLegalAbstractClass2</*0*/ T>(/*0*/ t: T)
            public final val </*0*/ R> pr: T
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }
}
