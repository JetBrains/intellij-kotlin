package

public fun bar(): kotlin.Unit
public fun foo(/*0*/ javaClass: JavaClass): kotlin.Unit

public interface I {
    public abstract fun doIt(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class JavaClass {
    public constructor JavaClass()
    @kotlin.Deprecated(message = "Deprecated in Java") public open fun doSomething1(/*0*/ runnable: java.lang.Runnable!): kotlin.Unit
    @kotlin.Deprecated(message = "Deprecated in Java") public open fun doSomething2(/*0*/ runnable: java.lang.Runnable!): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
