3 fun foo(<bold>p: String</bold>) {
4 	val v1 = <bold>p</bold>.let { value -> bar(value) }
19 		(INLINE CALL let) inline fun <T, R> <bold>T</bold>.let(block: (T) -> R): R {
20 			(INLINE CALL let) return block(<bold>this</bold>)
19 				(INLINE CALL let) [LAMBDA PARAMETER #0] inline fun <T, R> T.let(<bold>block: (T) -> R</bold>): R {
4 					[LAMBDA PARAMETER #0] val v1 = p.let <bold>{ value -> bar(value) }</bold>
4 						val v1 = p.let { <bold>value</bold> -> bar(value) }
4 							val v1 = p.let { value -> bar(<bold>value</bold>) }
16 								fun bar(<bold>s: String</bold>) = s
16 									fun bar(s: String) = <bold>s</bold>
16 										fun <bold>bar(s: String) = s</bold>
4 											val v1 = p.let { value -> <bold>bar(value)</bold> }
4 												val v1 = p.let <bold>{ value -> bar(value) }</bold>
4 													[LAMBDA CALLS] val v1 = p.let <bold>{ value -> bar(value) }</bold>
19 														(INLINE CALL let) [LAMBDA CALLS] inline fun <T, R> T.let(<bold>block: (T) -> R</bold>): R {
20 															(INLINE CALL let) return <bold>block(this)</bold>
4 																val v1 = p.<bold>let { value -> bar(value) }</bold>
4 																	val <bold>v1 = p.let { value -> bar(value) }</bold>
6 	val v2 = <bold>p</bold>.let { it }
19 		(INLINE CALL let) inline fun <T, R> <bold>T</bold>.let(block: (T) -> R): R {
20 			(INLINE CALL let) return block(<bold>this</bold>)
19 				(INLINE CALL let) [LAMBDA PARAMETER #0] inline fun <T, R> T.let(<bold>block: (T) -> R</bold>): R {
6 					[LAMBDA PARAMETER #0] val v2 = p.let <bold>{ it }</bold>
6 						val v2 = p.let { <bold>it</bold> }
6 							val v2 = p.let <bold>{ it }</bold>
6 								[LAMBDA CALLS] val v2 = p.let <bold>{ it }</bold>
19 									(INLINE CALL let) [LAMBDA CALLS] inline fun <T, R> T.let(<bold>block: (T) -> R</bold>): R {
20 										(INLINE CALL let) return <bold>block(this)</bold>
6 											val v2 = p.<bold>let { it }</bold>
6 												val <bold>v2 = p.let { it }</bold>
8 	val v3 = <bold>p</bold>.let {
19 		(INLINE CALL let) inline fun <T, R> <bold>T</bold>.let(block: (T) -> R): R {
20 			(INLINE CALL let) return block(<bold>this</bold>)
19 				(INLINE CALL let) [LAMBDA PARAMETER #0] inline fun <T, R> T.let(<bold>block: (T) -> R</bold>): R {
8 					[LAMBDA PARAMETER #0] val v3 = p.let <bold>{</bold>
13 	val v4 = <bold>p</bold>.let(::zoo)
19 		(INLINE CALL let) inline fun <T, R> <bold>T</bold>.let(block: (T) -> R): R {
20 			(INLINE CALL let) return block(<bold>this</bold>)
19 				(INLINE CALL let) [LAMBDA PARAMETER #0] inline fun <T, R> T.let(<bold>block: (T) -> R</bold>): R {
13 					[LAMBDA PARAMETER #0] val v4 = p.let(<bold>::zoo</bold>)
17 						fun zoo(<bold>s: String</bold>) = s
17 							fun zoo(s: String) = <bold>s</bold>
17 								fun <bold>zoo(s: String) = s</bold>
13 									[LAMBDA CALLS] val v4 = p.let(<bold>::zoo</bold>)
19 										(INLINE CALL let) [LAMBDA CALLS] inline fun <T, R> T.let(<bold>block: (T) -> R</bold>): R {
20 											(INLINE CALL let) return <bold>block(this)</bold>
13 												val v4 = p.<bold>let(::zoo)</bold>
13 													val <bold>v4 = p.let(::zoo)</bold>
