5 fun <bold>bar(a: Int): Int = foo(a) { if (it > 0) it else return 0 }</bold>
5 	fun bar(a: Int): Int = <bold>foo(a) { if (it > 0) it else return 0 }</bold>
3 		inline fun <bold>foo(a: Int, f: (Int) -> Int) = f(a)</bold>
3 			inline fun foo(a: Int, f: (Int) -> Int) = <bold>f(a)</bold>
3 				[LAMBDA IN] inline fun foo(a: Int, f: (Int) -> Int) = <bold>f</bold>(a)
3 					[LAMBDA IN] inline fun foo(a: Int, <bold>f: (Int) -> Int</bold>) = f(a)
5 						[LAMBDA IN] fun bar(a: Int): Int = foo(a) <bold>{ if (it > 0) it else return 0 }</bold>
5 							fun bar(a: Int): Int = foo(a) <bold>{ if (it > 0) it else return 0 }</bold>
5 								fun bar(a: Int): Int = foo(a) { <bold>if (it > 0) it else return 0</bold> }
5 									fun bar(a: Int): Int = foo(a) { if (it > 0) <bold>it</bold> else return 0 }
5 										[LAMBDA CALLS] fun bar(a: Int): Int = foo(a) <bold>{ if (it > 0) it else return 0 }</bold>
3 											[LAMBDA CALLS] inline fun foo(a: Int, <bold>f: (Int) -> Int</bold>) = f(a)
3 												inline fun foo(a: Int, f: (Int) -> Int) = f(<bold>a</bold>)
3 													inline fun foo(<bold>a: Int</bold>, f: (Int) -> Int) = f(a)
5 														fun bar(a: Int): Int = foo(<bold>a</bold>) { if (it > 0) it else return 0 }
5 															fun bar(<bold>a: Int</bold>): Int = foo(a) { if (it > 0) it else return 0 }
5 	fun bar(a: Int): Int = foo(a) { if (it > 0) it else return <bold>0</bold> }
