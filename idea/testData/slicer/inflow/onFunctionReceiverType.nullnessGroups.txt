[NotNull Values]
12 	<bold>""</bold>.extensionFun()
8 		fun <bold>Any</bold>.extensionFun() {
12 			<bold>""</bold>.extensionFun()
14 	<bold>1</bold>.extensionFun()
8 		fun <bold>Any</bold>.extensionFun() {
14 			<bold>1</bold>.extensionFun()
18 	with(<bold>123</bold>) {
8 		fun <bold>Any</bold>.extensionFun() {
18 			[LAMBDA CALLS RECEIVER] with(123) <bold>{</bold>
LIB 				(INLINE CALL with) [LAMBDA CALLS RECEIVER] public inline fun <T, R> with(receiver: T, <bold>block: T.() -> R</bold>): R {
LIB 					(INLINE CALL with) return <bold>receiver</bold>.block()
LIB 						(INLINE CALL with) public inline fun <T, R> with(<bold>receiver: T</bold>, block: T.() -> R): R {
18 							with(<bold>123</bold>) {
24 	<bold>"A"</bold>.foo()
8 		fun <bold>Any</bold>.extensionFun() {
11 			fun <bold>String</bold>.foo() {
24 				<bold>"A"</bold>.foo()

[Other Values]
3 	KotlinUtil.extensionFun(<bold>"x"</bold>);
8 		fun <bold>Any</bold>.extensionFun() {
3 			KotlinUtil.extensionFun(<bold>"x"</bold>);

