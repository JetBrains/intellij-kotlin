UFile (package = ) [public abstract annotation Annotation {...]
    UClass (name = Annotation) [public abstract annotation Annotation {...}]
        UAnnotationMethod (name = strings) [public abstract fun strings() : java.lang.String[] = UastEmptyExpression]
    UClass (name = A) [public final class A {...}]
        UAnnotation (fqName = Annotation) [@Annotation]
        UMethod (name = A) [public fun A() = UastEmptyExpression]
    UClass (name = AnnotationInner) [public abstract annotation AnnotationInner {...}]
        UAnnotationMethod (name = value) [public abstract fun value() : Annotation = UastEmptyExpression]
    UClass (name = B1) [public final class B1 {...}]
        UAnnotation (fqName = AnnotationArray) [@AnnotationArray(value = <anonymous class>())]
            UNamedExpression (name = value) [value = <anonymous class>()] = Undetermined
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [<anonymous class>()] = Undetermined
                    UIdentifier (Identifier (Annotation)) [UIdentifier (Identifier (Annotation))]
                    USimpleNameReferenceExpression (identifier = <anonymous class>, resolvesTo = null) [<anonymous class>] = Undetermined
        UMethod (name = B1) [public fun B1() = UastEmptyExpression]
    UClass (name = B2) [public final class B2 {...}]
        UAnnotation (fqName = AnnotationArray) [@AnnotationArray(value = <anonymous class>("sv1", "sv2"))]
            UNamedExpression (name = value) [value = <anonymous class>("sv1", "sv2")] = Undetermined
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 2)) [<anonymous class>("sv1", "sv2")] = Undetermined
                    UIdentifier (Identifier (Annotation)) [UIdentifier (Identifier (Annotation))]
                    USimpleNameReferenceExpression (identifier = <anonymous class>, resolvesTo = null) [<anonymous class>] = Undetermined
                    ULiteralExpression (value = "sv1") ["sv1"] = Undetermined
                    ULiteralExpression (value = "sv2") ["sv2"] = Undetermined
        UMethod (name = B2) [public fun B2() = UastEmptyExpression]
    UClass (name = AnnotationArray) [public abstract annotation AnnotationArray {...}]
        UAnnotationMethod (name = value) [public abstract fun value() : Annotation[] = UastEmptyExpression]
    UClass (name = C) [public final class C {...}]
        UAnnotation (fqName = AnnotationArray) [@AnnotationArray(value = <anonymous class>(arrayOf("sar1", "sar2")))]
            UNamedExpression (name = value) [value = <anonymous class>(arrayOf("sar1", "sar2"))] = Undetermined
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) [<anonymous class>(arrayOf("sar1", "sar2"))] = Undetermined
                    UIdentifier (Identifier (Annotation)) [UIdentifier (Identifier (Annotation))]
                    USimpleNameReferenceExpression (identifier = <anonymous class>, resolvesTo = null) [<anonymous class>] = Undetermined
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 2)) [arrayOf("sar1", "sar2")] = Undetermined
                        UIdentifier (Identifier (arrayOf)) [UIdentifier (Identifier (arrayOf))]
                        USimpleNameReferenceExpression (identifier = arrayOf, resolvesTo = null) [arrayOf] = Undetermined
                        ULiteralExpression (value = "sar1") ["sar1"] = Undetermined
                        ULiteralExpression (value = "sar2") ["sar2"] = Undetermined
        UMethod (name = C) [public fun C() = UastEmptyExpression]
    UClass (name = C2) [public final class C2 {...}]
        UAnnotation (fqName = AnnotationArray) [@AnnotationArray(value = <anonymous class>(collectionLiteral["[sar]1", "[sar]2"]))]
            UNamedExpression (name = value) [value = <anonymous class>(collectionLiteral["[sar]1", "[sar]2"])] = Undetermined
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) [<anonymous class>(collectionLiteral["[sar]1", "[sar]2"])] = Undetermined
                    UIdentifier (Identifier (Annotation)) [UIdentifier (Identifier (Annotation))]
                    USimpleNameReferenceExpression (identifier = <anonymous class>, resolvesTo = null) [<anonymous class>] = Undetermined
                    UCallExpression (kind = UastCallKind(name='array_initializer'), argCount = 2)) [collectionLiteral["[sar]1", "[sar]2"]] = Undetermined
                        UIdentifier (Identifier ([)) [UIdentifier (Identifier ([))]
                        ULiteralExpression (value = "[sar]1") ["[sar]1"] = Undetermined
                        ULiteralExpression (value = "[sar]2") ["[sar]2"] = Undetermined
        UMethod (name = C2) [public fun C2() = UastEmptyExpression]
