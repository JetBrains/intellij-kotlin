UFile (package = ) [public abstract interface Pizza {...]
    UClass (name = Pizza) [public abstract interface Pizza {...}]
        UMethod (name = getSize) [public abstract fun getSize() : int = UastEmptyExpression]
        UMethod (name = getName) [public abstract fun getName() : java.lang.String = UastEmptyExpression]
        UMethod (name = contains) [public abstract fun contains(@org.jetbrains.annotations.NotNull ingredient: Pizza.Ingredient) : boolean = UastEmptyExpression]
            UParameter (name = ingredient) [@org.jetbrains.annotations.NotNull var ingredient: Pizza.Ingredient]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
    UClass (name = Margherita) [public final class Margherita : Pizza {...}]
        UField (name = size) [@org.jetbrains.annotations.NotNull private final var size: int = 42]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            ULiteralExpression (value = 42) [42] = (long)42
        UMethod (name = Margherita) [public fun Margherita(@org.jetbrains.annotations.NotNull size: int) = UastEmptyExpression]
            UParameter (name = size) [@org.jetbrains.annotations.NotNull var size: int = 42]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                ULiteralExpression (value = 42) [42] = (long)42
        UMethod (name = getSize) [public fun getSize() : int = UastEmptyExpression]
        UMethod (name = getName) [public fun getName() : java.lang.String {...}]
            UBlockExpression [{...}] = Nothing
                UReturnExpression [return java.lang.[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Nothing
                    UQualifiedReferenceExpression [java.lang.[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
                        UQualifiedReferenceExpression [java.lang] = external lang()
                            USimpleNameReferenceExpression (identifier = java) [java] = external java()
                            USimpleNameReferenceExpression (identifier = lang) [lang] = external lang()
                        [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
        UMethod (name = contains) [public fun contains(@org.jetbrains.annotations.NotNull ingredient: Pizza.Ingredient) : boolean {...}]
            UParameter (name = ingredient) [@org.jetbrains.annotations.NotNull var ingredient: Pizza.Ingredient]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UBlockExpression [{...}] = Nothing
                UReturnExpression [return false] = Nothing
                    ULiteralExpression (value = false) [false] = false
