UFile (package = ) [public final class PropertyReferencesKt {...]
    UClass (name = PropertyReferencesKt) [public final class PropertyReferencesKt {...}]
        UMethod (name = properties) [public static final fun properties() : void {...}]
            UBlockExpression [{...}] = external mutableProp()
                UDeclarationsExpression [var a: <ErrorType> = [!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
                    ULocalVariable (name = a) [var a: <ErrorType> = [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                        [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
                UDeclarationsExpression [var x: <ErrorType> = -a.mutableProp] = Undetermined
                    ULocalVariable (name = x) [var x: <ErrorType> = -a.mutableProp]
                        UPrefixExpression (operator = -) [-a.mutableProp] = Undetermined
                            UQualifiedReferenceExpression [a.mutableProp] = external mutableProp()
                                USimpleNameReferenceExpression (identifier = a) [a] = (var a = Undetermined)
                                USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
                UBinaryExpression (operator = =) [a.mutableProp = 1] = Undetermined
                    UQualifiedReferenceExpression [a.mutableProp] = external mutableProp()
                        USimpleNameReferenceExpression (identifier = a) [a] = (var a = Undetermined)
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
                    ULiteralExpression (value = 1) [1] = (long)1
                UBinaryExpression (operator = +=) [a.mutableProp += x] = Undetermined
                    UQualifiedReferenceExpression [a.mutableProp] = external mutableProp()
                        USimpleNameReferenceExpression (identifier = a) [a] = external a()
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
                    USimpleNameReferenceExpression (identifier = x) [x] = (var x = Undetermined)
                UPrefixExpression (operator = ++) [++a.mutableProp] = Undetermined
                    UQualifiedReferenceExpression [a.mutableProp] = external mutableProp()
                        USimpleNameReferenceExpression (identifier = a) [a] = external a()
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
                UPostfixExpression (operator = --) [a.mutableProp--] = external mutableProp()
                    UQualifiedReferenceExpression [a.mutableProp] = external mutableProp()
                        USimpleNameReferenceExpression (identifier = a) [a] = external a()
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
        UMethod (name = ext) [public static final fun ext(@null $this$ext: A) : void {...}]
            UParameter (name = $this$ext) [@null var $this$ext: A]
                UAnnotation (fqName = null) [@null]
            UBlockExpression [{...}] = external mutableProp()
                UDeclarationsExpression [var x: <ErrorType> = -mutableProp] = Undetermined
                    ULocalVariable (name = x) [var x: <ErrorType> = -mutableProp]
                        UPrefixExpression (operator = -) [-mutableProp] = Undetermined
                            USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
                UBinaryExpression (operator = =) [mutableProp = 1] = Undetermined
                    USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
                    ULiteralExpression (value = 1) [1] = (long)1
                UBinaryExpression (operator = +=) [mutableProp += x] = Undetermined
                    USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
                    USimpleNameReferenceExpression (identifier = x) [x] = (var x = Undetermined)
                UPrefixExpression (operator = ++) [++mutableProp] = Undetermined
                    USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
                UPostfixExpression (operator = --) [mutableProp--] = external mutableProp()
                    USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
    UClass (name = A) [public final class A {...}]
        UField (name = privateProp) [@org.jetbrains.annotations.NotNull private var privateProp: int = 0]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            ULiteralExpression (value = 0) [0] = (long)0
        UField (name = mutableProp) [@null private var mutableProp: int]
            UAnnotation (fqName = null) [@null]
        UMethod (name = A) [public fun A(@null init: int) {...}]
            UParameter (name = init) [@null var init: int]
                UAnnotation (fqName = null) [@null]
            UBlockExpression [{...}] = Undetermined
                UBlockExpression [{...}] = Undetermined
                    UBinaryExpression (operator = =) [mutableProp = init] = Undetermined
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] = external mutableProp()
                        USimpleNameReferenceExpression (identifier = init) [init] = Undetermined
        UMethod (name = getMutableProp) [public final fun getMutableProp() : int = UastEmptyExpression]
        UMethod (name = setMutableProp) [public final fun setMutableProp(value: int) : void = UastEmptyExpression]
            UParameter (name = value) [var value: int]
        UMethod (name = add) [public final fun add(@null x: int) : int {...}]
            UParameter (name = x) [@null var x: int]
                UAnnotation (fqName = null) [@null]
            UBlockExpression [{...}] = Nothing
                UDeclarationsExpression [var result: <ErrorType> = privateProp] = Undetermined
                    ULocalVariable (name = result) [var result: <ErrorType> = privateProp]
                        USimpleNameReferenceExpression (identifier = privateProp) [privateProp] = external privateProp()
                UBinaryExpression (operator = =) [privateProp = x] = Undetermined
                    USimpleNameReferenceExpression (identifier = privateProp) [privateProp] = external privateProp()
                    USimpleNameReferenceExpression (identifier = x) [x] = Undetermined
                UReturnExpression [return privateProp] = Nothing
                    USimpleNameReferenceExpression (identifier = privateProp) [privateProp] = external privateProp()
