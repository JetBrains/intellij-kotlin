UFile (package = ) [public final class CommentOwnersKt {...]
    UClass (name = CommentOwnersKt) [public final class CommentOwnersKt {...}]
        UField (name = topLevelProperty) [private static final var topLevelProperty: int = 42]
            ULiteralExpression (value = 42) [42] = (long)42
        UMethod (name = getTopLevelProperty) [public static final fun getTopLevelProperty() : int = UastEmptyExpression]
        UMethod (name = topLevelFun) [public static final fun topLevelFun() : void {...}]
            UBlockExpression [{...}] = Nothing
                UReturnExpression [return [!] UnknownKotlinExpression (CALL_EXPRESSION)] = Nothing
                    [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
        UMethod (name = funPlainCall) [public static final fun funPlainCall(a: int) : void {...}]
            UParameter (name = a) [var a: int]
            UBlockExpression [{...}] = Nothing
                UReturnExpression [return [!] UnknownKotlinExpression (CALL_EXPRESSION)] = Nothing
                    [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
        UMethod (name = funNamedArgumentsCall) [public static final fun funNamedArgumentsCall(a: int) : void {...}]
            UParameter (name = a) [var a: int]
            UBlockExpression [{...}] = Nothing
                UReturnExpression [return [!] UnknownKotlinExpression (CALL_EXPRESSION)] = Nothing
                    [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
        UMethod (name = func) [public static final fun func(a: int) : void {...}]
            UParameter (name = a) [var a: int]
            UBlockExpression [{...}] = Undetermined
                [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
                [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
                UWhileExpression [while (true) {...}] = Undetermined
                    ULiteralExpression (value = true) [true] = true
                    UBlockExpression [{...}] = Nothing(break)
                        UBreakExpression (label = null) [break] = Nothing(break)
                UIfExpression [if (true) {...}] = Undetermined
                    ULiteralExpression (value = true) [true] = true
                    UBlockExpression [{...}] = Undetermined
                    UBlockExpression [{...}] = Undetermined
                UDeclarationsExpression [] = Undetermined
    UClass (name = TopLevelClass) [public final class TopLevelClass {...}]
        UField (name = classLevelProperty) [private final var classLevelProperty: int = 42]
            ULiteralExpression (value = 42) [42] = (long)42
        UMethod (name = TopLevelClass) [public fun TopLevelClass(t: int) {...}]
            UParameter (name = t) [var t: int]
            UBlockExpression [{...}] = Undetermined
                UastEmptyExpression [UastEmptyExpression] = Undetermined
        UMethod (name = getClassLevelProperty) [public final fun getClassLevelProperty() : int = UastEmptyExpression]
        UMethod (name = classLevelMethod) [public final fun classLevelMethod() : void {...}]
            UBlockExpression [{...}] = Nothing
                UReturnExpression [return [!] UnknownKotlinExpression (CALL_EXPRESSION)] = Nothing
                    [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)] = Undetermined
        UClass (name = NestedClass) [public static final class NestedClass {...}]
            UMethod (name = NestedClass) [public fun NestedClass() = UastEmptyExpression]
    UClass (name = MyBooleanEnum) [public final enum MyBooleanEnum {...}]
        UField (name = TRUE) [public static final var TRUE: MyBooleanEnum]
        UField (name = FALSE) [public static final var FALSE: MyBooleanEnum]
        UMethod (name = MyBooleanEnum) [private fun MyBooleanEnum() = UastEmptyExpression]
