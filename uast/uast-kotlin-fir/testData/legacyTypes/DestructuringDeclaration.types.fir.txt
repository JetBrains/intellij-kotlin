UFile (package = ) [public final class DestructuringDeclarationKt {...]
    UClass (name = DestructuringDeclarationKt) [public final class DestructuringDeclarationKt {...}]
        UMethod (name = foo) [public static final fun foo(@org.jetbrains.annotations.NotNull data: java.lang.Object) : void {...}]
            UParameter (name = data) [@org.jetbrains.annotations.NotNull var data: java.lang.Object]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UBlockExpression [{...}] : PsiType:Unit
                UDeclarationsExpression [@null var var268d41a5: kotlin.Pair<? extends java.lang.String,? extends java.lang.Integer> = "foo" <other> 1]
                    ULocalVariable (name = var268d41a5) [@null var var268d41a5: kotlin.Pair<? extends java.lang.String,? extends java.lang.Integer> = "foo" <other> 1]
                        UAnnotation (fqName = null) [@null]
                        UBinaryExpression (operator = <other>) ["foo" <other> 1] : PsiType:Pair<? extends String, ? extends Integer>
                            ULiteralExpression (value = "foo") ["foo"] : PsiType:String
                            ULiteralExpression (value = 1) [1] : PsiType:int
                UDeclarationsExpression [@null @null var var465978a0: kotlin.Pair<? extends java.lang.String,? extends java.lang.String> = data as kotlin.Pair<? extends java.lang.String,? extends java.lang.String>]
                    ULocalVariable (name = var465978a0) [@null @null var var465978a0: kotlin.Pair<? extends java.lang.String,? extends java.lang.String> = data as kotlin.Pair<? extends java.lang.String,? extends java.lang.String>]
                        UAnnotation (fqName = null) [@null]
                        UAnnotation (fqName = null) [@null]
                        UBinaryExpressionWithType [data as kotlin.Pair<? extends java.lang.String,? extends java.lang.String>] : PsiType:Pair<? extends String, ? extends String>
                            USimpleNameReferenceExpression (identifier = data) [data] : PsiType:Object
                            UTypeReferenceExpression (name = kotlin.Pair<? extends java.lang.String,? extends java.lang.String>) [kotlin.Pair<? extends java.lang.String,? extends java.lang.String>]
