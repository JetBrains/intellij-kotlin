UFile (package = ) [public final class PropertyReferencesKt {...]
    UClass (name = PropertyReferencesKt) [public final class PropertyReferencesKt {...}]
        UMethod (name = properties) [public static final fun properties() : void {...}]
            UBlockExpression [{...}] : PsiType:int
                [!] UnknownKotlinExpression (PROPERTY) [[!] UnknownKotlinExpression (PROPERTY)]
                [!] UnknownKotlinExpression (PROPERTY) [[!] UnknownKotlinExpression (PROPERTY)]
                UBinaryExpression (operator = =) [a.mutableProp = 1] : PsiType:void
                    UQualifiedReferenceExpression [a.mutableProp] : PsiType:void
                        USimpleNameReferenceExpression (identifier = a) [a] : PsiType:A
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] : PsiType:int
                    ULiteralExpression (value = 1) [1] : PsiType:int
                UBinaryExpression (operator = +=) [a.mutableProp += x] : PsiType:void
                    UQualifiedReferenceExpression [a.mutableProp] : PsiType:void
                        USimpleNameReferenceExpression (identifier = a) [a] : PsiType:void
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] : PsiType:void
                    USimpleNameReferenceExpression (identifier = x) [x] : PsiType:int
                UPrefixExpression (operator = ++) [++a.mutableProp] : PsiType:int
                    UQualifiedReferenceExpression [a.mutableProp] : PsiType:int
                        USimpleNameReferenceExpression (identifier = a) [a] : PsiType:void
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] : PsiType:int
                UPostfixExpression (operator = --) [a.mutableProp--] : PsiType:int
                    UQualifiedReferenceExpression [a.mutableProp] : PsiType:int
                        USimpleNameReferenceExpression (identifier = a) [a] : PsiType:void
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] : PsiType:int
        UMethod (name = ext) [public static final fun ext($this$ext: A) : void {...}]
            UParameter (name = $this$ext) [var $this$ext: A]
            UBlockExpression [{...}] : PsiType:int
                [!] UnknownKotlinExpression (PROPERTY) [[!] UnknownKotlinExpression (PROPERTY)]
                UBinaryExpression (operator = =) [mutableProp = 1] : PsiType:void
                    USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] : PsiType:int
                    ULiteralExpression (value = 1) [1] : PsiType:int
                UBinaryExpression (operator = +=) [mutableProp += x] : PsiType:void
                    USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] : PsiType:void
                    USimpleNameReferenceExpression (identifier = x) [x] : PsiType:int
                UPrefixExpression (operator = ++) [++mutableProp] : PsiType:int
                    USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] : PsiType:int
                UPostfixExpression (operator = --) [mutableProp--] : PsiType:int
                    USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] : PsiType:int
    UClass (name = A) [public final class A {...}]
        UField (name = privateProp) [private var privateProp: int = 0]
            ULiteralExpression (value = 0) [0] : PsiType:int
        UField (name = mutableProp) [private var mutableProp: int]
        UMethod (name = A) [public fun A(init: int) {...}]
            UParameter (name = init) [var init: int]
            UBlockExpression [{...}]
                UBlockExpression [{...}] : PsiType:Unit
                    UBinaryExpression (operator = =) [mutableProp = init] : PsiType:void
                        USimpleNameReferenceExpression (identifier = mutableProp) [mutableProp] : PsiType:int
                        USimpleNameReferenceExpression (identifier = init) [init] : PsiType:int
        UMethod (name = getMutableProp) [public final fun getMutableProp() : int = UastEmptyExpression]
        UMethod (name = setMutableProp) [public final fun setMutableProp(value: int) : void = UastEmptyExpression]
            UParameter (name = value) [var value: int]
        UMethod (name = add) [public final fun add(x: int) : int {...}]
            UParameter (name = x) [var x: int]
            UBlockExpression [{...}] : PsiType:Void
                [!] UnknownKotlinExpression (PROPERTY) [[!] UnknownKotlinExpression (PROPERTY)]
                UBinaryExpression (operator = =) [privateProp = x] : PsiType:void
                    USimpleNameReferenceExpression (identifier = privateProp) [privateProp] : PsiType:int
                    USimpleNameReferenceExpression (identifier = x) [x] : PsiType:int
                UReturnExpression [return privateProp] : PsiType:Void
                    USimpleNameReferenceExpression (identifier = privateProp) [privateProp] : PsiType:int
