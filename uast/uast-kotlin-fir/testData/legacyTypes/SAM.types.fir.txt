UFile (package = ) [import java.lang.Thread...]
    UImportStatement (isOnDemand = false) [import java.lang.Thread]
    UImportStatement (isOnDemand = false) [import java.lang.Runnable]
    UImportStatement (isOnDemand = false) [import java.util.concurrent.Callable]
    UImportStatement (isOnDemand = false) [import java.util.function.Supplier]
    UClass (name = SAMKt) [public final class SAMKt {...}]
        UField (name = notSam) [@org.jetbrains.annotations.NotNull private static final var notSam: kotlin.jvm.functions.Function0<? extends kotlin.Unit> = { ...}]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            ULambdaExpression [{ ...}] : PsiType:Function0<? extends Unit>
                UBlockExpression [{...}] : PsiType:Void
        UField (name = foo) [@org.jetbrains.annotations.NotNull private static var foo: java.lang.Runnable = { ...}]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            ULambdaExpression [{ ...}] : PsiType:Function0<? extends Unit>
                UBlockExpression [{...}] : PsiType:Runnable
        UField (name = baz) [@org.jetbrains.annotations.NotNull private static final var baz: java.lang.Runnable = java.lang.[!] UnknownKotlinExpression (CALL_EXPRESSION)]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UQualifiedReferenceExpression [java.lang.[!] UnknownKotlinExpression (CALL_EXPRESSION)] : PsiType:Runnable
                UQualifiedReferenceExpression [java.lang] : PsiType:Unit
                    USimpleNameReferenceExpression (identifier = java) [java] : PsiType:Unit
                    USimpleNameReferenceExpression (identifier = lang) [lang] : PsiType:Unit
                [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
        UMethod (name = getNotSam) [public static final fun getNotSam() : kotlin.jvm.functions.Function0<? extends kotlin.Unit> = UastEmptyExpression]
        UMethod (name = getFoo) [public static final fun getFoo() : java.lang.Runnable = UastEmptyExpression]
        UMethod (name = setFoo) [public static final fun setFoo(@org.jetbrains.annotations.NotNull value: java.lang.Runnable) : void = UastEmptyExpression]
            UParameter (name = value) [@org.jetbrains.annotations.NotNull var value: java.lang.Runnable]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
        UMethod (name = bar) [public static final fun bar() : java.lang.Runnable {...}]
            UBlockExpression [{...}] : PsiType:Void
                UBinaryExpression (operator = =) [foo = { ...}] : PsiType:void
                    USimpleNameReferenceExpression (identifier = foo) [foo] : PsiType:Runnable
                    ULambdaExpression [{ ...}] : PsiType:Function0<? extends Unit>
                        UBlockExpression [{...}] : PsiType:Runnable
                UDeclarationsExpression [var a: java.lang.Runnable = { ...} as java.lang.Runnable]
                    ULocalVariable (name = a) [var a: java.lang.Runnable = { ...} as java.lang.Runnable]
                        UBinaryExpressionWithType [{ ...} as java.lang.Runnable] : PsiType:Runnable
                            ULambdaExpression [{ ...}] : PsiType:Function0<? extends Unit>
                                UBlockExpression [{...}] : PsiType:Void
                            UTypeReferenceExpression (name = java.lang.Runnable) [java.lang.Runnable]
                [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
                UReturnExpression [return { ...}] : PsiType:Void
                    ULambdaExpression [{ ...}] : PsiType:Function0<? extends Unit>
                        UBlockExpression [{...}] : PsiType:Runnable
        UMethod (name = getBaz) [public static final fun getBaz() : java.lang.Runnable = UastEmptyExpression]
        UMethod (name = runRunnable) [public static final fun runRunnable(@null r: java.lang.Runnable) : error.NonExistentClass {...}]
            UParameter (name = r) [@null var r: java.lang.Runnable]
                UAnnotation (fqName = null) [@null]
            UBlockExpression [{...}]
                UReturnExpression [return [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                    [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
        UMethod (name = test1) [public static final fun test1() : void {...}]
            UBlockExpression [{...}] : PsiType:Unit
                UDeclarationsExpression [var thread1: java.lang.Thread = [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                    ULocalVariable (name = thread1) [var thread1: java.lang.Thread = [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                        [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
        UMethod (name = test2) [public static final fun test2() : void {...}]
            UBlockExpression [{...}] : PsiType:Unit
                UDeclarationsExpression [var thread2: java.lang.Thread = [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                    ULocalVariable (name = thread2) [var thread2: java.lang.Thread = [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                        [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
        UMethod (name = test3) [public static final fun test3() : void {...}]
            UBlockExpression [{...}] : PsiType:String
                [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
                [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
        UMethod (name = ambiguousSamAcceptor) [public static final fun ambiguousSamAcceptor(@null s: java.util.function.Supplier<java.lang.String>) : java.lang.String {...}]
            UParameter (name = s) [@null var s: java.util.function.Supplier<java.lang.String>]
                UAnnotation (fqName = null) [@null]
            UBlockExpression [{...}]
                UReturnExpression [return [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                    [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
        UMethod (name = ambiguousSamAcceptor) [public static final fun ambiguousSamAcceptor(@null s: java.util.concurrent.Callable<java.lang.String>) : java.lang.String {...}]
            UParameter (name = s) [@null var s: java.util.concurrent.Callable<java.lang.String>]
                UAnnotation (fqName = null) [@null]
            UBlockExpression [{...}]
                UReturnExpression [return [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                    [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
