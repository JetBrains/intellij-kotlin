UFile (package = ) [public final class AccessArrayOfInlineClassKt {...]
    UClass (name = AccessArrayOfInlineClassKt) [public final class AccessArrayOfInlineClassKt {...}]
        UField (name = xs) [@org.jetbrains.annotations.NotNull private static final var xs: Z[] = [!] UnknownKotlinExpression (CALL_EXPRESSION)]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
        UMethod (name = getXs) [public static final fun getXs() : Z[] = UastEmptyExpression]
        UMethod (name = box) [public static final fun box() : java.lang.String {...}]
            UBlockExpression [{...}] : PsiType:Void
                UBinaryExpression (operator = =) [xs[0] = [!] UnknownKotlinExpression (CALL_EXPRESSION)] : PsiType:Unit
                    UArrayAccessExpression [xs[0]] : PsiType:Unit
                        USimpleNameReferenceExpression (identifier = xs) [xs] : PsiType:Z[]
                        ULiteralExpression (value = 0) [0] : PsiType:int
                    [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
                UDeclarationsExpression [var t: Z = xs[0]]
                    ULocalVariable (name = t) [var t: Z = xs[0]]
                        UArrayAccessExpression [xs[0]] : PsiType:Z
                            USimpleNameReferenceExpression (identifier = xs) [xs] : PsiType:Z[]
                            ULiteralExpression (value = 0) [0] : PsiType:int
                UIfExpression [if (t.data != 12) throw [!] UnknownKotlinExpression (CALL_EXPRESSION)] : PsiType:Unit
                    UBinaryExpression (operator = !=) [t.data != 12] : PsiType:boolean
                        UQualifiedReferenceExpression [t.data] : PsiType:int
                            USimpleNameReferenceExpression (identifier = t) [t] : PsiType:Z
                            USimpleNameReferenceExpression (identifier = data) [data] : PsiType:int
                        ULiteralExpression (value = 12) [12] : PsiType:int
                    UThrowExpression [throw [!] UnknownKotlinExpression (CALL_EXPRESSION)] : PsiType:Void
                        [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
                UReturnExpression [return "OK"] : PsiType:Void
                    ULiteralExpression (value = "OK") ["OK"] : PsiType:String
