UFile (package = ) [public final class ArrayGetAssignMultiIndexKt {...]
    UClass (name = ArrayGetAssignMultiIndexKt) [public final class ArrayGetAssignMultiIndexKt {...}]
        UMethod (name = get) [public static final fun get($this$get: java.lang.String[], index1: int, index2: int) : java.lang.String {...}]
            UParameter (name = $this$get) [var $this$get: java.lang.String[]]
            UParameter (name = index1) [var index1: int]
            UParameter (name = index2) [var index2: int]
            UBlockExpression [{...}]
                UReturnExpression [return this[index1 + index2]]
                    UArrayAccessExpression [this[index1 + index2]] : PsiType:String
                        UThisExpression (label = null) [this] : PsiType:String[]
                        UBinaryExpression (operator = +) [index1 + index2] : PsiType:int
                            USimpleNameReferenceExpression (identifier = index1) [index1] : PsiType:int
                            USimpleNameReferenceExpression (identifier = index2) [index2] : PsiType:int
        UMethod (name = set) [public static final fun set($this$set: java.lang.String[], index1: int, index2: int, elem: java.lang.String) : void {...}]
            UParameter (name = $this$set) [var $this$set: java.lang.String[]]
            UParameter (name = index1) [var index1: int]
            UParameter (name = index2) [var index2: int]
            UParameter (name = elem) [var elem: java.lang.String]
            UBlockExpression [{...}] : PsiType:Unit
                UBinaryExpression (operator = =) [this[index1 + index2] = elem] : PsiType:Unit
                    UArrayAccessExpression [this[index1 + index2]] : PsiType:Unit
                        UThisExpression (label = null) [this] : PsiType:String[]
                        UBinaryExpression (operator = +) [index1 + index2] : PsiType:int
                            USimpleNameReferenceExpression (identifier = index1) [index1] : PsiType:int
                            USimpleNameReferenceExpression (identifier = index2) [index2] : PsiType:int
                    USimpleNameReferenceExpression (identifier = elem) [elem] : PsiType:String
        UMethod (name = box) [public static final fun box() : java.lang.String {...}]
            UBlockExpression [{...}] : PsiType:Void
                UDeclarationsExpression [var s: <ErrorType> = [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                    ULocalVariable (name = s) [var s: <ErrorType> = [!] UnknownKotlinExpression (CALL_EXPRESSION)]
                        [!] UnknownKotlinExpression (CALL_EXPRESSION) [[!] UnknownKotlinExpression (CALL_EXPRESSION)]
                UBinaryExpression (operator = =) [s[1, --1] = "O"] : PsiType:Unit
                    UArrayAccessExpression [s[1, --1]] : PsiType:Unit
                        USimpleNameReferenceExpression (identifier = s) [s] : PsiType:String[]
                        ULiteralExpression (value = 1) [1] : PsiType:int
                        UPrefixExpression (operator = -) [--1] : PsiType:int
                            ULiteralExpression (value = -1) [-1] : PsiType:int
                    ULiteralExpression (value = "O") ["O"] : PsiType:String
                UBinaryExpression (operator = +=) [s[2, --2] += "K"] : PsiType:Unit
                    UArrayAccessExpression [s[2, --2]] : PsiType:Unit
                        USimpleNameReferenceExpression (identifier = s) [s] : PsiType:String[]
                        ULiteralExpression (value = 2) [2] : PsiType:int
                        UPrefixExpression (operator = -) [--2] : PsiType:int
                            ULiteralExpression (value = -2) [-2] : PsiType:int
                    ULiteralExpression (value = "K") ["K"] : PsiType:String
                UReturnExpression [return s[--3, 3]] : PsiType:Void
                    UArrayAccessExpression [s[--3, 3]] : PsiType:String
                        USimpleNameReferenceExpression (identifier = s) [s] : PsiType:String[]
                        UPrefixExpression (operator = -) [--3] : PsiType:int
                            ULiteralExpression (value = -3) [-3] : PsiType:int
                        ULiteralExpression (value = 3) [3] : PsiType:int
